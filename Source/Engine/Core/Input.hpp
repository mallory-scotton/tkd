///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include <Engine/Utils.hpp>
#include <Engine/Core/Component.hpp>
#include <Engine/Core/Transform.hpp>
#include <SFML/Graphics.hpp>

///////////////////////////////////////////////////////////////////////////////
// Namespace tkd
///////////////////////////////////////////////////////////////////////////////
namespace tkd
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class InputComponent : public Component
{
private:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    Transform* m_transform = nullptr;       //<!
    float m_moveSpeed = 200.f;              //<!

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    void start(void) override
    {
        m_transform = getGameObject()->getComponent<Transform>();
    }

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param deltaTime
    ///
    ///////////////////////////////////////////////////////////////////////////
    void update(float deltaTime) override
    {
        if (!m_transform) {
            return;
        }

        Vec2f movement(0.f);

        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::W))
            movement.y -= 1.0f;
        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::S))
            movement.y += 1.0f;
        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::A))
            movement.x -= 1.0f;
        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Key::D))
            movement.x += 1.0f;

        if (movement != 0.0f) {
            movement.normalize();
        }

        Vec2f position = m_transform->getPosition();
        position += movement * m_moveSpeed * deltaTime;
        m_transform->setPosition(position);
    }

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    float getMoveSpeed(void) const
    {
        return (m_moveSpeed);
    }

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param speed
    ///
    ///////////////////////////////////////////////////////////////////////////
    void setMoveSpeed(float speed)
    {
        m_moveSpeed = speed;
    }
};

} // namespace tkd
